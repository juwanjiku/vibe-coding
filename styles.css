* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    min-height: 100vh;
    color: #333;
}

.navbar {
    background: rgba(255, 255, 255, 0.95);
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    padding: 1rem 0;
    position: sticky;
    top: 0;
    z-index: 100;
}

.navbar .container {
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.logo {
    color: #667eea;
    font-size: 1.8rem;
    font-weight: 700;
}

.container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 2rem;
}

.page-title {
    color: white;
    font-size: 2.5rem;
    margin: 3rem 0 2rem 0;
    text-align: center;
}

.courses-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 2rem;
    padding: 2rem 0;
}

.course-card {
    background: white;
    border-radius: 12px;
    overflow: hidden;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    cursor: pointer;
}

.course-card:hover {
    transform: translateY(-8px);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.2);
}

.course-image {
    width: 100%;
    height: 180px;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 3rem;
    color: white;
}

.course-content {
    padding: 1.5rem;
}

.course-title {
    font-size: 1.4rem;
    color: #333;
    margin-bottom: 0.5rem;
}

.course-description {
    color: #666;
    font-size: 0.95rem;
    line-height: 1.6;
    margin-bottom: 1rem;
}

.course-meta {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-top: 1rem;
    padding-top: 1rem;
    border-top: 1px solid #eee;
}

.course-lessons {
    color: #667eea;
    font-weight: 600;
    font-size: 0.9rem;
}

.course-status {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    font-size: 0.9rem;
    font-weight: 600;
}

.status-incomplete {
    color: #ff6b6b;
}

.status-complete {
    color: #51cf66;
}

.checkmark {
    display: inline-block;
    width: 20px;
    height: 20px;
    background: #51cf66;
    border-radius: 50%;
    color: white;
    text-align: center;
    line-height: 20px;
    font-size: 0.8rem;
}

.course-detail-header {
    background: white;
    padding: 2rem;
    border-radius: 12px;
    margin: 2rem 0;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
}

.course-detail-title {
    font-size: 2rem;
    color: #333;
    margin-bottom: 1rem;
}

.progress-section {
    margin: 1.5rem 0;
}

.progress-bar {
    width: 100%;
    height: 10px;
    background: #e9ecef;
    border-radius: 10px;
    overflow: hidden;
    margin-top: 0.5rem;
}

.progress-fill {
    height: 100%;
    background: linear-gradient(90deg, #667eea 0%, #764ba2 100%);
    transition: width 0.3s ease;
}

.lessons-section {
    background: white;
    padding: 2rem;
    border-radius: 12px;
    margin: 2rem 0;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
}

.lessons-title {
    font-size: 1.5rem;
    color: #333;
    margin-bottom: 1.5rem;
}

.lesson-item {
    padding: 1rem;
    border: 1px solid #e9ecef;
    border-radius: 8px;
    margin-bottom: 1rem;
    display: flex;
    justify-content: space-between;
    align-items: center;
    transition: background 0.3s ease;
}

.lesson-item:hover {
    background: #f8f9fa;
}

.lesson-info {
    flex: 1;
}

.lesson-number {
    color: #667eea;
    font-weight: 600;
    font-size: 0.9rem;
}

.lesson-title {
    font-size: 1.1rem;
    color: #333;
    margin-top: 0.3rem;
}

.lesson-duration {
    color: #999;
    font-size: 0.85rem;
    margin-top: 0.3rem;
}

.btn-primary {
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color: white;
    border: none;
    padding: 0.8rem 2rem;
    border-radius: 8px;
    font-size: 1rem;
    font-weight: 600;
    cursor: pointer;
    transition: transform 0.2s ease, box-shadow 0.2s ease;
}

.btn-primary:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 15px rgba(102, 126, 234, 0.4);
}

.btn-primary:active {
    transform: translateY(0);
}

.btn-complete {
    background: #51cf66;
    color: white;
    border: none;
    padding: 1rem 2.5rem;
    border-radius: 8px;
    font-size: 1.1rem;
    font-weight: 600;
    cursor: pointer;
    transition: transform 0.2s ease, box-shadow 0.2s ease, background 0.3s ease;
    display: block;
    margin: 2rem auto;
}

.btn-complete:hover {
    transform: translateY(-3px);
    box-shadow: 0 6px 20px rgba(81, 207, 102, 0.4);
    background: #40c057;
}

.btn-complete.completed {
    background: #868e96;
    cursor: not-allowed;
}

.btn-complete.completed:hover {
    transform: none;
    box-shadow: none;
}

.btn-back {
    background: white;
    color: #667eea;
    border: 2px solid #667eea;
    padding: 0.6rem 1.5rem;
    border-radius: 8px;
    font-size: 1rem;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.2s ease;
    margin-top: 2rem;
}

.btn-back:hover {
    background: #667eea;
    color: white;
    transform: translateX(-5px);
}

.btn-login {
    background: transparent;
    color: #667eea;
    border: 2px solid #667eea;
    padding: 0.6rem 1.5rem;
    border-radius: 8px;
    font-size: 0.95rem;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
}

.btn-login:hover {
    background: #667eea;
    color: white;
    transform: scale(1.05);
}

.modal {
    display: none;
    position: fixed;
    z-index: 1000;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.6);
    backdrop-filter: blur(5px);
}

.modal-content {
    background: white;
    margin: 5% auto;
    padding: 2rem;
    border-radius: 16px;
    width: 90%;
    max-width: 450px;
    position: relative;
    animation: slideDown 0.3s ease;
}

@keyframes slideDown {
    from {
        opacity: 0;
        transform: translateY(-50px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

.close {
    position: absolute;
    right: 1.5rem;
    top: 1.5rem;
    font-size: 2rem;
    font-weight: 300;
    color: #999;
    cursor: pointer;
    transition: color 0.3s ease;
}

.close:hover {
    color: #333;
}

.auth-tabs {
    display: flex;
    gap: 1rem;
    margin-bottom: 2rem;
}

.tab-btn {
    flex: 1;
    padding: 0.8rem;
    background: transparent;
    border: none;
    border-bottom: 3px solid transparent;
    font-size: 1rem;
    font-weight: 600;
    color: #999;
    cursor: pointer;
    transition: all 0.3s ease;
}

.tab-btn.active {
    color: #667eea;
    border-bottom-color: #667eea;
}

.tab-btn:hover {
    color: #667eea;
}

.auth-form h2 {
    color: #333;
    margin-bottom: 1.5rem;
    font-size: 1.5rem;
}

.input-field {
    width: 100%;
    padding: 0.8rem 1rem;
    margin-bottom: 1rem;
    border: 2px solid #e9ecef;
    border-radius: 8px;
    font-size: 1rem;
    transition: border-color 0.3s ease;
}

.input-field:focus {
    outline: none;
    border-color: #667eea;
}

.input-field:hover {
    border-color: #ced4da;
}
Files
Commands
Search
Config files
/

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>E-Learning Platform</title>
    <link rel="stylesheet" href="styles.css">
</head>
<body>
    <nav class="navbar">
        <div class="container">
            <h1 class="logo">LearnHub</h1>
            <button class="btn-login" onclick="showLogin()">Login / Sign Up</button>
        </div>
    </nav>

    <div id="loginModal" class="modal">
        <div class="modal-content">
            <span class="close" onclick="closeLogin()">&times;</span>
            <div class="auth-tabs">
                <button class="tab-btn active" onclick="showTab('login')">Login</button>
                <button class="tab-btn" onclick="showTab('signup')">Sign Up</button>
            </div>
            
            <div id="loginForm" class="auth-form">
                <h2>Login to Your Account</h2>
                <input type="email" placeholder="Email" class="input-field">
                <input type="password" placeholder="Password" class="input-field">
                <button class="btn-primary" onclick="handleLogin()">Login</button>
            </div>

            <div id="signupForm" class="auth-form" style="display: none;">
                <h2>Create New Account</h2>
                <input type="text" placeholder="Full Name" class="input-field">
                <input type="email" placeholder="Email" class="input-field">
                <input type="password" placeholder="Password" class="input-field">
                <input type="password" placeholder="Confirm Password" class="input-field">
                <button class="btn-primary" onclick="handleSignup()">Sign Up</button>
            </div>
        </div>
    </div>

    <main id="app">
        <section id="homePage" class="container">
            <h2 class="page-title">Available Courses</h2>
            <div class="courses-grid" id="coursesGrid"></div>
        </section>

        <section id="coursePage" class="container" style="display: none;">
            <button class="btn-back" onclick="goHome()">‚Üê Back to Courses</button>
            <div id="courseDetail"></div>
        </section>
    </main>

    <script src="script.js"></script>
</body>
</html>

E-Learning Platform (LearnHub)
Overview
LearnHub is a client-side e-learning platform that enables users to browse and access educational courses across various technology domains. The application provides a course catalog interface with authentication capabilities, lesson management, and progress tracking. Built as a vanilla JavaScript single-page application (SPA), it focuses on delivering an interactive learning experience through a modern, gradient-styled interface.

User Preferences
Preferred communication style: Simple, everyday language.

System Architecture
Frontend Architecture
Single-Page Application Pattern

The application uses vanilla JavaScript without frameworks to create a dynamic SPA experience
DOM manipulation is handled directly through JavaScript functions
State management is achieved through in-memory JavaScript objects and arrays
All UI transitions and interactions are client-side, avoiding page reloads
Rationale: Chosen for simplicity and minimal dependencies, making the codebase accessible and easy to understand. This approach is suitable for a learning platform prototype or MVP without the complexity of modern frameworks.

User Interface Design
Modal-Based Authentication

Login and signup forms are presented through a modal overlay system
Tab-based switching between login and signup states within the same modal
Authentication state is managed client-side
Course Catalog Structure

Grid-based responsive layout for course display
Each course contains structured lesson data with metadata (title, duration)
Progress tracking fields (completed, progress percentage) are embedded in course objects
Rationale: The modal approach keeps users on the same page context while authenticating, reducing friction. The grid layout ensures responsive design across devices.

Data Architecture
In-Memory Data Storage

Course catalog is stored as a hardcoded JavaScript array (coursesData)
Each course object contains:
Basic metadata (id, title, description, icon)
Nested lessons array with lesson-specific metadata
Progress tracking fields (completed boolean, progress percentage)
Data Structure:

{
  id: number,
  title: string,
  description: string,
  icon: string (emoji),
  lessons: [{ id, title, duration }],
  completed: boolean,
  progress: number
}
Rationale: Static data storage is acceptable for prototype/demo purposes. This approach eliminates backend complexity while demonstrating the UI/UX flow. For production, this would transition to API-based data fetching.

Alternatives Considered: localStorage for persistence, but current implementation prioritizes simplicity over state persistence across sessions.

Styling Architecture
CSS-Based Design System

Gradient background theme (purple spectrum: #667eea to #764ba2)
Glass-morphism effects using rgba() backgrounds with transparency
Sticky navigation with shadow effects for depth
Grid-based responsive layouts using CSS Grid
Rationale: Pure CSS approach ensures fast rendering and eliminates dependency on CSS frameworks. The gradient theme creates a modern, engaging visual identity suitable for an educational platform.

Navigation and Routing
View-Based Navigation

Multiple page sections exist in the same HTML document
JavaScript functions toggle visibility using display: none/block
Navigation functions: showLogin(), closeLogin(), showTab(), goHome()
Rationale: Simple show/hide pattern avoids the complexity of routing libraries while maintaining SPA benefits. Suitable for applications with limited distinct views.

Pros: No external routing dependencies, simple implementation Cons: Not URL-addressable, no browser history support, limited scalability

External Dependencies
Third-Party Services
None Currently Implemented

The application is completely self-contained with no external API calls, authentication services, or third-party integrations in the current implementation.

Potential Future Integrations
Based on the authentication and course structure, likely future dependencies include:

Authentication Service - OAuth providers (Google, GitHub) or custom authentication API
Backend API - RESTful API for course data, user progress, and enrollment management
Database - User accounts, course content, progress tracking, and enrollment records
Video/Content Hosting - Platform for hosting lesson videos and materials (YouTube API, Vimeo, or custom CDN)
Analytics - User engagement and learning progress analytics
Browser APIs Used
DOM API - Direct manipulation for dynamic UI updates
Event Handling - onclick handlers for user interactions
CSS Grid - Responsive layout system


.auth-form .btn-primary {
    width: 100%;
    margin-top: 1rem;
}

@media (max-width: 768px) {
    .page-title {
        font-size: 2rem;
    }

    .courses-grid {
        grid-template-columns: 1fr;
    }

    .container {
        padding: 0 1rem;
    }

    .navbar .container {
        padding: 0 1rem;
    }

    .logo {
        font-size: 1.4rem;
    }

    .modal-content {
        width: 95%;
        margin: 10% auto;
    }
}
